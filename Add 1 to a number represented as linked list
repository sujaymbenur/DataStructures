//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h> 
using namespace std; 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

void printList(Node* node) 
{ 
    while (node != NULL) { 
        cout << node->data; 
        node = node->next; 
    }  
    cout<<"\n";
} 


// } Driver Code Ends
//User function template for C++

/* 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

*/
Node* reverse(Node* head )
{
    int c = 1;
    Node *current , *nxt , *prev , *ans;
    current = head;
    nxt = current->next;
    prev = NULL;
    while(nxt!=NULL){
    prev = current;
    current = nxt;
    nxt = current->next;
    current->next = prev;
    if(c==1){
        prev->next = NULL;
        c = 2;
        }
    }
        return current;
}
class Solution
{
    public:
    Node* addOne(Node *head) 
    {
        head = reverse(head);
        Node *a;
        a = head;
        while(a->next!=NULL && a->data == 9)
        {
            a->data = 0;
            a = a->next;
        }
        if(a->data == 9)
        {
            Node *p;
            a->data = 0;
            p = new Node(1);
            a->next = p;
        }
        else
        {
            a->data = a->data + 1;
        }
        
        return reverse(head);
        
        
    }
};



//{ Driver Code Starts.

int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        
        Node* head = new Node( s[0]-'0' );
        Node* tail = head;
        for(int i=1; i<s.size(); i++)
        {
            tail->next = new Node( s[i]-'0' );
            tail = tail->next;
        }
        Solution ob;
        head = ob.addOne(head);
        printList(head); 
    }
    return 0; 
} 

// } Driver Code Ends
